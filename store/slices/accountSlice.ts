import { createSlice, PayloadAction } from "@reduxjs/toolkit";

// Define a type for the slice state
interface AccountState {
  address: string | null;
  chainId: string | null;
}

// Define the initial state using that type
const initialState: AccountState = {
  address: null,
  chainId: null,
};

export const accountSlice = createSlice({
  name: "account",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  // Use the PayloadAction type to declare the contents of `action.payload`
  reducers: {
    address(state: AccountState, action: PayloadAction<string | null>) {
      state.address = action.payload;
    },
    chainId(state: AccountState, action: PayloadAction<string | null>) {
      state.chainId = action.payload;
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  // extraReducers: (builder) => {}
});

// reducers/actions go in here in order to import them into components
export const { address, chainId } = accountSlice.actions;

export default accountSlice.reducer;
